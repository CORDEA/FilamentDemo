material {
    name : lit,
    shadingModel : lit,
    parameters : [
        {
            type : float3,
            name : baseColor
        },
        {
            type : samplerExternal,
            name : frontTexture
        },
        {
            type : samplerExternal,
            name : backTexture
        },
        {
            type : samplerExternal,
            name : frontNormalTexture
        },
        {
            type : samplerExternal,
            name : backNormalTexture
        },
        {
            type : mat4,
            name : textureTransform
        }
    ],
    variables : [
        uv
    ],
}

vertex {
    void materialVertex(inout MaterialVertexInputs material) {
        material.uv = 0.5 * (getPosition() + vec4(1));
    }
}

fragment {
    void material(inout MaterialInputs material) {
        vec2 uv = (materialParams.textureTransform * variable_uv).xy;
        if (variable_uv.x >= 0.51) {
            material.normal = texture(materialParams_frontNormalTexture, uv).xyz * 2.0 - 1.0;
        } else if (variable_uv.x <= 0.49) {
            material.normal = texture(materialParams_backNormalTexture, uv).xyz * 2.0 - 1.0;
        }
        prepareMaterial(material);

        material.metallic = 1.0;
        material.clearCoat = 1.0;

        if (variable_uv.x >= 0.51) {
            material.baseColor = texture(materialParams_frontTexture, uv);
        } else if (variable_uv.x <= 0.49) {
            material.baseColor = texture(materialParams_backTexture, uv);
        } else {
            material.baseColor.rgb = materialParams.baseColor.rgb;
        }
    }
}
